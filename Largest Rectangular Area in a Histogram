#include<bits/stdc++.h>
using namespace std;

vector<int> rights(int arr[],int n){
    stack<pair<int,int>>s;
    vector<int>res;
    for(int i=n-1;i>=0;i--){
        if(s.size()==0){
            res.push_back(n);
        }else if(s.size()>0 && s.top().second<arr[i]){
            res.push_back(s.top().first);
        }
        else if(s.size()>0 && s.top().second>=arr[i]){
            while(s.size()>0 && s.top().second>=arr[i]){
                s.pop();
            }

            if(s.size()==0){
                res.push_back(n);
            }
            else{
                res.push_back(s.top().first);
            }
        }

        s.push({i,arr[i]});
    }

    reverse(res.begin(),res.end());
    return res;
}

vector<int> lefts(int arr[],int n){
    stack<pair<int,int>>s;
    vector<int>res;
    for(int i=0;i<n;i++){
        if(s.size()==0){
            res.push_back(-1);
        }else if(s.size()>0 && s.top().second<arr[i]){
            res.push_back(s.top().first);
        }
        else if(s.size()>0 && s.top().second>=arr[i]){
            while(s.size()>0 && s.top().second>=arr[i]){
                s.pop();
            }

            if(s.size()==0){
                res.push_back(-1);
            }
            else{
                res.push_back(s.top().first);
            }
        }

        s.push({i,arr[i]});
    }

    return res;
}

int maxarea(int arr[],int n){
    vector<int>ls = lefts(arr,n);
    vector<int>rs = rights(arr,n);


    for(int i=0;i<n;i++){
        cout<<ls[i]<<" "<<rs[i]<<endl;
    }


    vector<int>width;

    for(int i=0;i<n;i++){
        width.push_back(rs[i]-ls[i]-1);
    }

    int mx = INT_MIN;

    for(int i=0;i<n;i++){
        if(arr[i]*width[i]>mx){
            mx = arr[i]*width[i];
        }
    }

    return mx;
}

int main(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }

    cout<<maxarea(arr,n);
}
