class Solution{
  public:
  
    vector<int> rightm(vector<int>arr,int n){
        stack<pair<int,int>>s;
        vector<int>res;
        for(int i=n-1;i>=0;i--){
            if(s.size()==0){
                res.push_back(n);
            }else if(s.size()>0 && s.top().second<arr[i]){
                res.push_back(s.top().first);
            }else if(s.size()>0 && s.top().second>=arr[i]){
                while(s.size()>0 && s.top().second>=arr[i]){
                    s.pop();
                }
                if(s.size()==0){
                    res.push_back(n);
                }else{
                    res.push_back(s.top().first);
                }
            }
            s.push({i,arr[i]});
        }
        reverse(res.begin(),res.end());
        // for(int i=0;i<n;i++){
        //     cout<<res[i]<<" ";
        // }
        // cout<<endl;
        return res;
    }
  
    vector<int> leftm(vector<int>arr,int n){
        stack<pair<int,int>>s;
        vector<int>res;
        for(int i=0;i<n;i++){
            if(s.size()==0){
                res.push_back(-1);
            }else if(s.size()>0 && s.top().second<arr[i]){
                res.push_back(s.top().first);
            }else if(s.size()>0 && s.top().second>=arr[i]){
                while(s.size()>0 && s.top().second>=arr[i]){
                    s.pop();
                }
                if(s.size()==0){
                    res.push_back(-1);
                }else{
                    res.push_back(s.top().first);
                }
            }
            s.push({i,arr[i]});
        }
        // for(int i=0;i<n;i++){
        //     cout<<res[i]<<" ";
        // }
        // cout<<endl;
        return res;
    }
    
    int maxhist(vector<int>cmp,int n){
        vector<int>lm = leftm(cmp,n);
        vector<int>rm = rightm(cmp,n);
        vector<int>width;
        for(int i=0;i<n;i++){
            width.push_back(rm[i]-lm[i]-1);
        }
        // for(int i=0;i<n;i++){
        //     cout<<width[i]<<" ";
        // }
        // cout<<endl;
        int mx = INT_MIN;
        for(int i=0;i<n;i++){
            if(cmp[i]*width[i]>mx){
                mx = cmp[i]*width[i];
            }
        }
        // cout<<mx<<endl;
        return mx;
    }
    
    int maxArea(int arr[MAX][MAX], int n, int m) {
        // Your code here
        vector<int>cmp(m);
        int mx=INT_MIN;
        for(int i=0;i<n;i++){
             for(int j=0;j<m;j++){
                if(arr[i][j] == 0){
                    cmp[j] = 0;
                }
                else{
                    cmp[j] +=1;
                }
             }
            // for(int i=0;i<n;i++){
            //     cout<<cmp[i]<<" ";
            // }
            // cout<<endl;
             int t =maxhist(cmp,m);
             if(t>mx){
                mx = t;
             }
        }
        return mx;
    }
};
